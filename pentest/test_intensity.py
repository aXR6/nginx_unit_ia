import ast
from pathlib import Path

# Extract the calculate_intensity function source without importing heavy deps
src = Path(__file__).resolve().parents[1] / "app" / "detection.py"
mod_ast = ast.parse(src.read_text())
func_src = None
for node in mod_ast.body:
    if isinstance(node, ast.FunctionDef) and node.name == "calculate_intensity":
        func_src = ast.get_source_segment(src.read_text(), node)
        break

namespace = {}
exec(func_src, namespace)
calculate_intensity = namespace["calculate_intensity"]


def test_calculate_intensity_high():
    intensity = calculate_intensity("high", [0.2, 0.8], 0.1)
    assert intensity == 216.0


def test_calculate_intensity_low():
    intensity = calculate_intensity("low", [0.5], 0.2)
    assert intensity == 40.0
