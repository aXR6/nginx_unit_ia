#!/usr/bin/env python3
"""Verifica se a estrutura essencial do projeto está presente."""
import os
import sys

REQUIRED_PATHS = [
    'Dockerfile',
    'docker-compose.yml',
    'entrypoint.sh',
    'requirements.txt',
    'schema.sql',
    'unit-config.json',
    '.env.example',
    'README.md',
    os.path.join('app', 'config.py'),
    os.path.join('app', 'db.py'),
    os.path.join('app', 'detection.py'),
    os.path.join('app', 'firewall.py'),
    os.path.join('app', 'main.py'),
    os.path.join('app', 'menu.py'),
    os.path.join('app', 'wsgi.py'),
    os.path.join('app', 'templates'),
    os.path.join('hello_app', 'Dockerfile'),
    os.path.join('hello_app', 'hello.py'),
]

def check_structure(base_dir: str) -> list:
    """Retorna uma lista de caminhos que não existem."""
    missing = []
    for path in REQUIRED_PATHS:
        if not os.path.exists(os.path.join(base_dir, path)):
            missing.append(path)
    return missing


def main() -> None:
    base_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
    missing = check_structure(base_dir)
    if missing:
        print('Estrutura inválida! Os seguintes itens estão ausentes:')
        for path in missing:
            print(f'- {path}')
        sys.exit(1)
    print('Estrutura verificada com sucesso.')


if __name__ == '__main__':
    main()
