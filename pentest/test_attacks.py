#!/usr/bin/env python3
"""Executa múltiplos testes simulando diferentes vetores de ataque."""
import os
import time
import json
import urllib.request
import urllib.parse

UNIT_PORT = int(os.getenv("UNIT_PORT", "8090"))
WEB_PANEL_PORT = int(os.getenv("WEB_PANEL_PORT", "8080"))

ATTACKS = {
    "xss": "<script>alert('XSS')</script>",
    "sqli": "' OR '1'='1' --",
    "path_traversal": "../../../../etc/passwd",
    "cmd_injection": "; cat /etc/passwd",
    "dos": "A" * 5000,
}


def send_request(payload: str) -> None:
    url = f"http://localhost:{UNIT_PORT}/?data={urllib.parse.quote(payload)}"
    try:
        with urllib.request.urlopen(url, timeout=5) as resp:
            resp.read()
        print(f"Requisição enviada para {url}")
    except Exception as exc:
        print(f"Falha ao enviar requisição: {exc}")


def fetch_json(path: str):
    url = f"http://localhost:{WEB_PANEL_PORT}{path}"
    try:
        with urllib.request.urlopen(url, timeout=5) as resp:
            return json.loads(resp.read().decode())
    except Exception as exc:
        print(f"Falha ao acessar {url}: {exc}")
        return None


def main() -> None:
    for name, payload in ATTACKS.items():
        print(f"Testando ataque: {name}")
        send_request(payload)
        time.sleep(1)

    logs = fetch_json("/api/logs")
    blocked = fetch_json("/api/blocked")
    if logs is None or blocked is None:
        print("Proxy ou painel web parece inativo.")
        return
    print(f"Total de logs: {len(logs)}")
    print(f"IPs bloqueados: {len(blocked)}")


if __name__ == "__main__":
    main()
